{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\designing-react-components\\\\src\\\\components\\\\Speakers\\\\Speakers.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport axios from \"axios\";\nimport SpeakerSearchBar from \"../SpeakerSearchBar/SpeakerSearchBar\";\nimport Speaker from \"../Speaker/Speaker\";\nimport { GET_ALL_SUCCESS, PUT_SUCCESS } from \"../../actions/request\";\nimport requestReducer, { REQUEST_STATUS } from \"../../reducers/request\";\n\nconst Speakers = () => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const {\n    0: {\n      speakers,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    speakers: [],\n    error: {}\n  });\n  useEffect(() => {\n    const fetchSpeakers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/speakers\");\n        dispatch({\n          data: response.data,\n          type: \"GET_ALL_SUCCESS\"\n        });\n      } catch (e) {\n        dispatch({\n          status: REQUEST_STATUS.ERROR,\n          type: \"UPDATE_STATUS\",\n          error: e\n        });\n      }\n    };\n\n    fetchSpeakers();\n  }, []);\n\n  async function onFavoriteToggleHandler(speakerRec) {\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n    const speakerIndex = speakers.map(speaker => speaker.id).indexOf(speakerRec.id);\n\n    try {\n      await axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, toggledSpeakerRec);\n      dispatch({\n        speakers: [...speakers.slice(0, speakerIndex), toggledSpeakerRec, ...speakers.slice(speakerIndex + 1)],\n        status: REQUEST_STATUS.SUCCESS\n      });\n    } catch (e) {\n      dispatch({\n        status: REQUEST_STATUS.ERROR,\n        error: e\n      });\n    }\n  }\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return _objectSpread(_objectSpread({}, speakerRec), {}, {\n      isFavorite: !speakerRec.isFavorite\n    });\n  }\n\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const hasErrored = status === REQUEST_STATUS.ERROR;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(SpeakerSearchBar, {\n    searchQuery: searchQuery,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), isLoading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, \"Loading...\"), hasErrored && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }\n  }, \"Loading error... Is the json-server running? (try \\\"npm run json-server\\\" at terminal prompt)\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"ERROR: \", error.message)), success && __jsx(\"div\", {\n    className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, speakers.filter(rec => {\n    const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n    return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n  }).map(speaker => __jsx(Speaker, _extends({\n    key: speaker.id\n  }, speaker, {\n    onFavoriteToggle: () => onFavoriteToggleHandler(speaker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/_Projects/designing-react-components/src/components/Speakers/Speakers.js"],"names":["React","useState","useEffect","useReducer","axios","SpeakerSearchBar","Speaker","GET_ALL_SUCCESS","PUT_SUCCESS","requestReducer","REQUEST_STATUS","Speakers","searchQuery","setSearchQuery","speakers","status","error","dispatch","LOADING","fetchSpeakers","response","get","data","type","e","ERROR","onFavoriteToggleHandler","speakerRec","toggledSpeakerRec","toggleSpeakerFavorite","speakerIndex","map","speaker","id","indexOf","put","slice","SUCCESS","isFavorite","success","isLoading","hasErrored","message","filter","rec","targetString","firstName","lastName","toLowerCase","length","includes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport axios from \"axios\";\n\nimport SpeakerSearchBar from \"../SpeakerSearchBar/SpeakerSearchBar\";\nimport Speaker from \"../Speaker/Speaker\";\nimport {GET_ALL_SUCCESS, PUT_SUCCESS} from \"../../actions/request\";\nimport requestReducer, {REQUEST_STATUS} from \"../../reducers/request\";\n\nconst Speakers = () => {\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const [{speakers, status, error}, dispatch] = useReducer(requestReducer,{\n        status: REQUEST_STATUS.LOADING,\n        speakers: [],\n        error: {}\n    });\n\n\n    useEffect(() => {\n        const fetchSpeakers = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:4000/speakers\");\n                dispatch({\n                    data: response.data,\n                    type: \"GET_ALL_SUCCESS\"\n                });\n            } catch (e) {\n                dispatch({\n                    status: REQUEST_STATUS.ERROR,\n                    type: \"UPDATE_STATUS\",\n                    error: e\n                });\n            }\n        }\n        fetchSpeakers();\n    }, []);\n\n    async function onFavoriteToggleHandler(speakerRec) {\n        const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n        const speakerIndex = speakers.map((speaker) => speaker.id).indexOf(speakerRec.id);\n        try {\n            await axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, toggledSpeakerRec);\n            dispatch({\n                speakers: [\n                    ...speakers.slice(0, speakerIndex),\n                    toggledSpeakerRec,\n                    ...speakers.slice(speakerIndex + 1)\n                ],\n                status: REQUEST_STATUS.SUCCESS\n            }\n            );\n        } catch (e) {\n            dispatch( {\n                status: REQUEST_STATUS.ERROR,\n                error: e\n            })\n        }\n    }\n\n    function toggleSpeakerFavorite(speakerRec) {\n        return {\n            ...speakerRec,\n            isFavorite: !speakerRec.isFavorite,\n        };\n    }\n\n    const success = status === REQUEST_STATUS.SUCCESS;\n    const isLoading = status === REQUEST_STATUS.LOADING;\n    const hasErrored = status === REQUEST_STATUS.ERROR;\n\n    return (\n        <div>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n            {isLoading && <div>Loading...</div>}\n            {hasErrored && <div>\n                Loading error... Is the json-server running? (try \"npm run\n                json-server\" at terminal prompt)\n                <br/>\n                <b>ERROR: {error.message}</b>\n            </div>}\n            {success && (\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                    {speakers.filter((rec) => {\n                        const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n                        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n                    })\n                        .map((speaker) => (\n                            <Speaker\n                                key={speaker.id}\n                                {...speaker}\n                                onFavoriteToggle={() => onFavoriteToggleHandler(speaker)}\n                            />\n                        ))\n                    }\n                </div>\n            )}\n        </div>\n    );\n};\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}