{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\designing-react-components\\\\src\\\\components\\\\HOC\\\\withRequest.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport requestReducer, { REQUEST_STATUS } from \"../../reducers/request\";\nimport axios from \"axios\";\nimport { GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS } from \"../../actions/request\";\nimport React, { useEffect, useReducer } from \"react\";\n\nconst withRequest = (baseUrl, routeName) => Component => props => {\n  const {\n    0: {\n      records,\n      status,\n      error\n    },\n    1: dispatch\n  } = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  });\n  useEffect(() => {\n    const fetchSpeakers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/speakers\");\n        dispatch({\n          records: response.data,\n          type: GET_ALL_SUCCESS\n        });\n      } catch (e) {\n        console.log(\"Loading data error\", e);\n        dispatch({\n          type: GET_ALL_FAILURE,\n          error: e\n        });\n      }\n    };\n\n    fetchSpeakers();\n  }, [baseUrl, routeName]);\n  const propsLocal = {\n    records,\n    status,\n    error,\n    put: async record => {\n      try {\n        await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\n        dispatch({\n          type: PUT_SUCCESS,\n          record: record\n        });\n      } catch (e) {\n        dispatch({\n          type: PUT_FAILURE,\n          error: e\n        });\n      }\n    }\n  };\n  return __jsx(Component, _extends({}, props, propsLocal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default withRequest;","map":{"version":3,"sources":["C:/_Projects/designing-react-components/src/components/HOC/withRequest.js"],"names":["requestReducer","REQUEST_STATUS","axios","GET_ALL_FAILURE","GET_ALL_SUCCESS","PUT_FAILURE","PUT_SUCCESS","React","useEffect","useReducer","withRequest","baseUrl","routeName","Component","props","records","status","error","dispatch","LOADING","fetchSpeakers","response","get","data","type","e","console","log","propsLocal","put","record","id"],"mappings":";;;;;AAAA,OAAOA,cAAP,IAAwBC,cAAxB,QAA6C,wBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,EAAuDC,WAAvD,QAAyE,uBAAzE;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAyBC,SAAD,IAAgBC,KAAD,IAAW;AAClE,QAAM;AAAA,OAAC;AAACC,MAAAA,OAAD;AAAUC,MAAAA,MAAV;AAAkBC,MAAAA;AAAlB,KAAD;AAAA,OAA2BC;AAA3B,MAAuCT,UAAU,CAACT,cAAD,EAAgB;AACnEgB,IAAAA,MAAM,EAAEf,cAAc,CAACkB,OAD4C;AAEnEJ,IAAAA,OAAO,EAAE,EAF0D;AAGnEE,IAAAA,KAAK,EAAE;AAH4D,GAAhB,CAAvD;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,gCAAV,CAAvB;AACAJ,QAAAA,QAAQ,CAAC;AACLH,UAAAA,OAAO,EAAEM,QAAQ,CAACE,IADb;AAELC,UAAAA,IAAI,EAAEpB;AAFD,SAAD,CAAR;AAIH,OAND,CAME,OAAOqB,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AACAP,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAErB,eADD;AAELc,UAAAA,KAAK,EAAEQ;AAFF,SAAD,CAAR;AAIH;AACJ,KAdD;;AAeAL,IAAAA,aAAa;AAChB,GAjBQ,EAiBN,CAACT,OAAD,EAAUC,SAAV,CAjBM,CAAT;AAmBA,QAAMgB,UAAU,GAAG;AACfb,IAAAA,OADe;AAEfC,IAAAA,MAFe;AAGfC,IAAAA,KAHe;AAIfY,IAAAA,GAAG,EAAE,MAAOC,MAAP,IAAkB;AACnB,UAAI;AACA,cAAM5B,KAAK,CAAC2B,GAAN,CAAW,GAAElB,OAAQ,IAAGC,SAAU,IAAGkB,MAAM,CAACC,EAAG,EAA/C,EAAkDD,MAAlD,CAAN;AACAZ,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAElB,WADD;AAELwB,UAAAA,MAAM,EAAEA;AAFH,SAAD,CAAR;AAIH,OAND,CAME,OAAOL,CAAP,EAAU;AACRP,QAAAA,QAAQ,CAAC;AACLM,UAAAA,IAAI,EAAEnB,WADD;AAELY,UAAAA,KAAK,EAAEQ;AAFF,SAAD,CAAR;AAIH;AACJ;AAjBc,GAAnB;AAmBA,SAAO,MAAC,SAAD,eAAeX,KAAf,EAA0Bc,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CA9CD;;AAgDA,eAAelB,WAAf","sourcesContent":["import requestReducer, {REQUEST_STATUS} from \"../../reducers/request\";\r\nimport axios from \"axios\";\r\nimport {GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS} from \"../../actions/request\";\r\nimport React, {useEffect, useReducer} from \"react\";\r\n\r\nconst withRequest = (baseUrl, routeName) => (Component) => (props) => {\r\n    const [{records, status, error}, dispatch] = useReducer(requestReducer,{\r\n        status: REQUEST_STATUS.LOADING,\r\n        records: [],\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchSpeakers = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:4000/speakers\");\r\n                dispatch({\r\n                    records: response.data,\r\n                    type: GET_ALL_SUCCESS\r\n                });\r\n            } catch (e) {\r\n                console.log(\"Loading data error\", e);\r\n                dispatch({\r\n                    type: GET_ALL_FAILURE,\r\n                    error: e\r\n                });\r\n            }\r\n        }\r\n        fetchSpeakers();\r\n    }, [baseUrl, routeName]);\r\n\r\n    const propsLocal = {\r\n        records,\r\n        status,\r\n        error,\r\n        put: async (record) => {\r\n            try {\r\n                await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n                dispatch({\r\n                    type: PUT_SUCCESS,\r\n                    record: record\r\n                });\r\n            } catch (e) {\r\n                dispatch({\r\n                    type: PUT_FAILURE,\r\n                    error: e\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return <Component {...props} {...propsLocal}/>\r\n};\r\n\r\nexport default withRequest;\r\n"]},"metadata":{},"sourceType":"module"}