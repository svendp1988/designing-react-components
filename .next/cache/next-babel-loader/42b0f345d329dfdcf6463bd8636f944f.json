{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\nimport { PUT_SUCCESS, PUT_FAILURE, GET_ALL_SUCCESS, GET_ALL_FAILURE } from '../../actions/request';\n\nvar Request = function Request(_ref) {\n  _s();\n\n  var baseUrl = _ref.baseUrl,\n      routeName = _ref.routeName,\n      children = _ref.children;\n\n  var _useReducer = useReducer(requestReducer, {\n    status: REQUEST_STATUS.LOADING,\n    records: [],\n    error: null\n  }),\n      _useReducer$ = _useReducer[0],\n      records = _useReducer$.records,\n      status = _useReducer$.status,\n      error = _useReducer$.error,\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"\".concat(baseUrl, \"/\").concat(routeName));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: GET_ALL_SUCCESS,\n                  records: response.data\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Loading data error', _context.t0);\n                dispatch({\n                  type: GET_ALL_FAILURE,\n                  error: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, [baseUrl, routeName]);\n  var childProps = {\n    records: records,\n    status: status,\n    error: error,\n    put: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.put(\"\".concat(baseUrl, \"/\").concat(routeName, \"/\").concat(record.id), record);\n\n              case 3:\n                dispatch({\n                  type: PUT_SUCCESS,\n                  record: record\n                });\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: PUT_FAILURE,\n                  error: _context2.t0\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n\n      function put(_x) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  };\n  return children(childProps);\n};\n\n_s(Request, \"fq00uX4ggqnr36TB/LtP3ZAT1CE=\");\n\n_c = Request;\nexport default Request;\n\nvar _c;\n\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"sources":["C:/_Projects/designing-react-components/src/components/RP/Request.js"],"names":["React","useEffect","useReducer","axios","requestReducer","REQUEST_STATUS","PUT_SUCCESS","PUT_FAILURE","GET_ALL_SUCCESS","GET_ALL_FAILURE","Request","baseUrl","routeName","children","status","LOADING","records","error","dispatch","fetchData","get","response","type","data","console","log","childProps","put","record","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,IAAyBC,cAAzB,QAA+C,wBAA/C;AAEA,SACIC,WADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKO,uBALP;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoC;AAAA;;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,oBACDX,UAAU,CAACE,cAAD,EAAiB;AACtEU,IAAAA,MAAM,EAAET,cAAc,CAACU,OAD+C;AAEtEC,IAAAA,OAAO,EAAE,EAF6D;AAGtEC,IAAAA,KAAK,EAAE;AAH+D,GAAjB,CADT;AAAA;AAAA,MACvCD,OADuC,gBACvCA,OADuC;AAAA,MAC9BF,MAD8B,gBAC9BA,MAD8B;AAAA,MACtBG,KADsB,gBACtBA,KADsB;AAAA,MACbC,QADa;;AAOhDjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMkB,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEahB,KAAK,CAACiB,GAAN,WAAaT,OAAb,cAAwBC,SAAxB,EAFb;;AAAA;AAEJS,gBAAAA,QAFI;AAGVH,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEd,eADD;AAELQ,kBAAAA,OAAO,EAAEK,QAAQ,CAACE;AAFb,iBAAD,CAAR;AAHU;AAAA;;AAAA;AAAA;AAAA;AAQVC,gBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEAP,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEb,eADD;AAELQ,kBAAAA,KAAK;AAFA,iBAAD,CAAR;;AAVU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATE,SAAS;AAAA;AAAA;AAAA,OAAf;;AAgBAA,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,CAACR,OAAD,EAAUC,SAAV,CAlBM,CAAT;AAoBA,MAAMc,UAAU,GAAG;AACfV,IAAAA,OAAO,EAAPA,OADe;AAEfF,IAAAA,MAAM,EAANA,MAFe;AAGfG,IAAAA,KAAK,EAALA,KAHe;AAIfU,IAAAA,GAAG;AAAA,0EAAE,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAESzB,KAAK,CAACwB,GAAN,WAAahB,OAAb,cAAwBC,SAAxB,cAAqCgB,MAAM,CAACC,EAA5C,GAAkDD,MAAlD,CAFT;;AAAA;AAGGV,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEhB,WADD;AAELsB,kBAAAA,MAAM,EAAEA;AAFH,iBAAD,CAAR;AAHH;AAAA;;AAAA;AAAA;AAAA;AAQGV,gBAAAA,QAAQ,CAAC;AACLI,kBAAAA,IAAI,EAAEf,WADD;AAELU,kBAAAA,KAAK;AAFA,iBAAD,CAAR;;AARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJY,GAAnB;AAoBA,SAAOJ,QAAQ,CAACa,UAAD,CAAf;AACH,CAhDD;;GAAMhB,O;;KAAAA,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport requestReducer, { REQUEST_STATUS } from '../../reducers/request';\r\n\r\nimport {\r\n    PUT_SUCCESS,\r\n    PUT_FAILURE,\r\n    GET_ALL_SUCCESS,\r\n    GET_ALL_FAILURE,\r\n} from '../../actions/request';\r\n\r\nconst Request = ({baseUrl, routeName, children}) => {\r\n    const [{ records, status, error }, dispatch] = useReducer(requestReducer, {\r\n        status: REQUEST_STATUS.LOADING,\r\n        records: [],\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}/${routeName}`);\r\n                dispatch({\r\n                    type: GET_ALL_SUCCESS,\r\n                    records: response.data,\r\n                });\r\n            } catch (e) {\r\n                console.log('Loading data error', e);\r\n\r\n                dispatch({\r\n                    type: GET_ALL_FAILURE,\r\n                    error: e,\r\n                });\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [baseUrl, routeName]);\r\n\r\n    const childProps = {\r\n        records,\r\n        status,\r\n        error,\r\n        put: async (record) => {\r\n            try {\r\n                await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n                dispatch({\r\n                    type: PUT_SUCCESS,\r\n                    record: record,\r\n                });\r\n            } catch (e) {\r\n                dispatch({\r\n                    type: PUT_FAILURE,\r\n                    error: e,\r\n                });\r\n            }\r\n        },\r\n    };\r\n\r\n    return children(childProps);\r\n};\r\n\r\nexport default Request;\r\n"]},"metadata":{},"sourceType":"module"}