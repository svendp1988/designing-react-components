{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\_Projects\\\\designing-react-components\\\\src\\\\components\\\\HOC\\\\withRequest.js\";\n\nvar __jsx = React.createElement;\nimport requestReducer, { REQUEST_STATUS } from \"../../reducers/request\";\nimport axios from \"axios\";\nimport { GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS } from \"../../actions/request\";\nimport React, { useEffect, useReducer } from \"react\";\n\nvar withRequest = function withRequest(baseUrl, routeName) {\n  return function (Component) {\n    var _s = $RefreshSig$();\n\n    return _s(function (props) {\n      _s();\n\n      var _useReducer = useReducer(requestReducer, {\n        status: REQUEST_STATUS.LOADING,\n        records: [],\n        error: null\n      }),\n          _useReducer$ = _useReducer[0],\n          records = _useReducer$.records,\n          status = _useReducer$.status,\n          error = _useReducer$.error,\n          dispatch = _useReducer[1];\n\n      useEffect(function () {\n        var fetchSpeakers = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    _context.next = 3;\n                    return axios.get(\"\".concat(baseUrl, \"/\").concat(routeName));\n\n                  case 3:\n                    response = _context.sent;\n                    dispatch({\n                      records: response.data,\n                      type: GET_ALL_SUCCESS\n                    });\n                    _context.next = 11;\n                    break;\n\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.log(\"Loading data error\", _context.t0);\n                    dispatch({\n                      type: GET_ALL_FAILURE,\n                      error: _context.t0\n                    });\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 7]]);\n          }));\n\n          return function fetchSpeakers() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        fetchSpeakers();\n      }, [baseUrl, routeName]);\n      var propsLocal = {\n        records: records,\n        status: status,\n        error: error,\n        put: function () {\n          var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    _context2.next = 3;\n                    return axios.put(\"\".concat(baseUrl, \"/\").concat(routeName, \"/\").concat(record.id), record);\n\n                  case 3:\n                    dispatch({\n                      type: PUT_SUCCESS,\n                      record: record\n                    });\n                    _context2.next = 9;\n                    break;\n\n                  case 6:\n                    _context2.prev = 6;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    dispatch({\n                      type: PUT_FAILURE,\n                      error: _context2.t0\n                    });\n\n                  case 9:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, null, [[0, 6]]);\n          }));\n\n          function put(_x) {\n            return _put.apply(this, arguments);\n          }\n\n          return put;\n        }()\n      };\n      return __jsx(Component, _extends({}, props, propsLocal, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }));\n    }, \"1hwY7Zv7RhlxA65fENwZt5G2ZwY=\");\n  };\n};\n\nexport default withRequest;","map":{"version":3,"sources":["C:/_Projects/designing-react-components/src/components/HOC/withRequest.js"],"names":["requestReducer","REQUEST_STATUS","axios","GET_ALL_FAILURE","GET_ALL_SUCCESS","PUT_FAILURE","PUT_SUCCESS","React","useEffect","useReducer","withRequest","baseUrl","routeName","Component","props","status","LOADING","records","error","dispatch","fetchSpeakers","get","response","data","type","console","log","propsLocal","put","record","id"],"mappings":";;;;;;;;AAAA,OAAOA,cAAP,IAAwBC,cAAxB,QAA6C,wBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,EAAuDC,WAAvD,QAAyE,uBAAzE;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,SAAV;AAAA,SAAwB,UAACC,SAAD;AAAA;;AAAA,cAAe,UAACC,KAAD,EAAW;AAAA;;AAAA,wBACrBL,UAAU,CAACT,cAAD,EAAgB;AACnEe,QAAAA,MAAM,EAAEd,cAAc,CAACe,OAD4C;AAEnEC,QAAAA,OAAO,EAAE,EAF0D;AAGnEC,QAAAA,KAAK,EAAE;AAH4D,OAAhB,CADW;AAAA;AAAA,UAC1DD,OAD0D,gBAC1DA,OAD0D;AAAA,UACjDF,MADiD,gBACjDA,MADiD;AAAA,UACzCG,KADyC,gBACzCA,KADyC;AAAA,UACjCC,QADiC;;AAOlEX,MAAAA,SAAS,CAAC,YAAM;AACZ,YAAMY,aAAa;AAAA,8EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAESlB,KAAK,CAACmB,GAAN,WAAaV,OAAb,cAAwBC,SAAxB,EAFT;;AAAA;AAERU,oBAAAA,QAFQ;AAGdH,oBAAAA,QAAQ,CAAC;AACLF,sBAAAA,OAAO,EAAEK,QAAQ,CAACC,IADb;AAELC,sBAAAA,IAAI,EAAEpB;AAFD,qBAAD,CAAR;AAHc;AAAA;;AAAA;AAAA;AAAA;AAQdqB,oBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAP,oBAAAA,QAAQ,CAAC;AACLK,sBAAAA,IAAI,EAAErB,eADD;AAELe,sBAAAA,KAAK;AAFA,qBAAD,CAAR;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH;;AAAA,0BAAbE,aAAa;AAAA;AAAA;AAAA,WAAnB;;AAeAA,QAAAA,aAAa;AAChB,OAjBQ,EAiBN,CAACT,OAAD,EAAUC,SAAV,CAjBM,CAAT;AAmBA,UAAMe,UAAU,GAAG;AACfV,QAAAA,OAAO,EAAPA,OADe;AAEfF,QAAAA,MAAM,EAANA,MAFe;AAGfG,QAAAA,KAAK,EAALA,KAHe;AAIfU,QAAAA,GAAG;AAAA,8EAAE,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAES3B,KAAK,CAAC0B,GAAN,WAAajB,OAAb,cAAwBC,SAAxB,cAAqCiB,MAAM,CAACC,EAA5C,GAAkDD,MAAlD,CAFT;;AAAA;AAGGV,oBAAAA,QAAQ,CAAC;AACLK,sBAAAA,IAAI,EAAElB,WADD;AAELuB,sBAAAA,MAAM,EAAEA;AAFH,qBAAD,CAAR;AAHH;AAAA;;AAAA;AAAA;AAAA;AAQGV,oBAAAA,QAAQ,CAAC;AACLK,sBAAAA,IAAI,EAAEnB,WADD;AAELa,sBAAAA,KAAK;AAFA,qBAAD,CAAR;;AARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJY,OAAnB;AAmBA,aAAO,MAAC,SAAD,eAAeJ,KAAf,EAA0Ba,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KA9C2C;AAAA,GAAxB;AAAA,CAApB;;AAgDA,eAAejB,WAAf","sourcesContent":["import requestReducer, {REQUEST_STATUS} from \"../../reducers/request\";\r\nimport axios from \"axios\";\r\nimport {GET_ALL_FAILURE, GET_ALL_SUCCESS, PUT_FAILURE, PUT_SUCCESS} from \"../../actions/request\";\r\nimport React, {useEffect, useReducer} from \"react\";\r\n\r\nconst withRequest = (baseUrl, routeName) => (Component) => (props) => {\r\n    const [{records, status, error}, dispatch] = useReducer(requestReducer,{\r\n        status: REQUEST_STATUS.LOADING,\r\n        records: [],\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchSpeakers = async () => {\r\n            try {\r\n                const response = await axios.get(`${baseUrl}/${routeName}`);\r\n                dispatch({\r\n                    records: response.data,\r\n                    type: GET_ALL_SUCCESS\r\n                });\r\n            } catch (e) {\r\n                console.log(\"Loading data error\", e);\r\n                dispatch({\r\n                    type: GET_ALL_FAILURE,\r\n                    error: e\r\n                });\r\n            }\r\n        }\r\n        fetchSpeakers();\r\n    }, [baseUrl, routeName]);\r\n\r\n    const propsLocal = {\r\n        records,\r\n        status,\r\n        error,\r\n        put: async (record) => {\r\n            try {\r\n                await axios.put(`${baseUrl}/${routeName}/${record.id}`, record);\r\n                dispatch({\r\n                    type: PUT_SUCCESS,\r\n                    record: record\r\n                });\r\n            } catch (e) {\r\n                dispatch({\r\n                    type: PUT_FAILURE,\r\n                    error: e\r\n                })\r\n            }\r\n        }\r\n    }\r\n    return <Component {...props} {...propsLocal}/>\r\n};\r\n\r\nexport default withRequest;\r\n"]},"metadata":{},"sourceType":"module"}