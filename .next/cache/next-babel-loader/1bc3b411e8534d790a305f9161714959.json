{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Projects\\\\designing-react-components\\\\src\\\\components\\\\Speakers\\\\Speakers.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\nimport { REQUEST_STATUS } from '../../reducers/request';\nimport SpecialMessageRenderProps from \"../RP/SpecialMessageRenderProps\";\nimport Request from \"../RP/Request\";\n\nconst Speakers = ({\n  bgColor\n}) => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  return __jsx(\"div\", {\n    className: bgColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(SpeakerSearchBar, {\n    searchQuery: searchQuery,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(SpecialMessageRenderProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, ({\n    specialMessage\n  }) => {\n    return __jsx(Request, {\n      baseUrl: \"http://localhost:4000\",\n      routeName: \"speakers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, ({\n      records: speakers,\n      status,\n      error,\n      put\n    }) => {\n      const onFavoriteToggleHandler = async speakerRec => {\n        put(_objectSpread(_objectSpread({}, speakerRec), {}, {\n          isFavorite: !speakerRec.isFavorite\n        }));\n      };\n\n      const success = status === REQUEST_STATUS.SUCCESS;\n      const isLoading = status === REQUEST_STATUS.LOADING;\n      const hasErrored = status === REQUEST_STATUS.ERROR;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 41\n        }\n      }, specialMessage && specialMessage.length > 0 && __jsx(\"div\", {\n        className: \"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 49\n        }\n      }, __jsx(\"p\", {\n        className: \"font-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 53\n        }\n      }, \"Special Message\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 53\n        }\n      }, specialMessage)), isLoading && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 59\n        }\n      }, \"Loading...\"), hasErrored && __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 49\n        }\n      }, \"Loading error... Is the json-server running? (try \\\"npm run json-server\\\" at terminal prompt)\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 53\n        }\n      }), __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 53\n        }\n      }, \"ERROR: \", error.message)), success && __jsx(\"div\", {\n        className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }, speakers.filter(rec => {\n        const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n      }).map(speaker => __jsx(Speaker, _extends({\n        key: speaker.id\n      }, speaker, {\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 61\n        }\n      })))));\n    });\n  })));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/_Projects/designing-react-components/src/components/Speakers/Speakers.js"],"names":["React","useState","SpeakerSearchBar","Speaker","REQUEST_STATUS","SpecialMessageRenderProps","Request","Speakers","bgColor","searchQuery","setSearchQuery","specialMessage","records","speakers","status","error","put","onFavoriteToggleHandler","speakerRec","isFavorite","success","SUCCESS","isLoading","LOADING","hasErrored","ERROR","length","message","filter","rec","targetString","firstName","lastName","toLowerCase","includes","map","speaker","id"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,OAAOC,yBAAP,MAAsC,iCAAtC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAE5B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,SACI;AAAK,IAAA,SAAS,EAAEO,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACI,IAAA,WAAW,EAAEC,WADjB;AAEI,IAAA,cAAc,EAAEC,cAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAsB;AACnB,WACI,MAAC,OAAD;AAAS,MAAA,OAAO,EAAC,uBAAjB;AAAyC,MAAA,SAAS,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACC,MAAAA,OAAO,EAAEC,QAAV;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAAD,KAA6C;AAC1C,YAAMC,uBAAuB,GAAG,MAAOC,UAAP,IAAsB;AAClDF,QAAAA,GAAG,iCACIE,UADJ;AAECC,UAAAA,UAAU,EAAE,CAACD,UAAU,CAACC;AAFzB,WAAH;AAIH,OALD;;AAMA,YAAMC,OAAO,GAAGN,MAAM,KAAKV,cAAc,CAACiB,OAA1C;AACA,YAAMC,SAAS,GAAGR,MAAM,KAAKV,cAAc,CAACmB,OAA5C;AACA,YAAMC,UAAU,GAAGV,MAAM,KAAKV,cAAc,CAACqB,KAA7C;AACA,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKd,cAAc,IAAIA,cAAc,CAACe,MAAf,GAAwB,CAA1C,IACG;AACI,QAAA,SAAS,EAAC,yEADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIf,cAAJ,CALJ,CAHR,EAYKW,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZlB,EAaKE,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWT,KAAK,CAACY,OAAjB,CAJJ,CAdR,EAqBKP,OAAO,IACJ;AAAK,QAAA,SAAS,EAAC,uDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,QAAQ,CACJe,MADJ,CACYC,GAAD,IAAS;AACb,cAAMC,YAAY,GAAI,GAAED,GAAG,CAACE,SAAU,IAAGF,GAAG,CAACG,QAAS,EAAjC,CAAmCC,WAAnC,EAArB;AACA,eAAOxB,WAAW,CAACiB,MAAZ,KAAuB,CAAvB,GACD,IADC,GAEDI,YAAY,CAACI,QAAb,CAAsBzB,WAAW,CAACwB,WAAZ,EAAtB,CAFN;AAGH,OANJ,EAOIE,GAPJ,CAOSC,OAAD,IACD,MAAC,OAAD;AACI,QAAA,GAAG,EAAEA,OAAO,CAACC;AADjB,SAEQD,OAFR;AAGI,QAAA,gBAAgB,EAAE,MAAMnB,uBAAuB,CAACmB,OAAD,CAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARP,CADL,CAtBR,CADJ;AA0CH,KArDL,CADJ;AAyDH,GA3DL,CADJ,CALJ,CADJ;AAuEH,CA3ED;;AA6EA,eAAe7B,QAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport SpeakerSearchBar from '../SpeakerSearchBar/SpeakerSearchBar';\nimport Speaker from '../Speaker/Speaker';\n\nimport {REQUEST_STATUS} from '../../reducers/request';\nimport SpecialMessageRenderProps from \"../RP/SpecialMessageRenderProps\";\nimport Request from \"../RP/Request\";\n\nconst Speakers = ({bgColor}) => {\n\n    const [searchQuery, setSearchQuery] = useState('');\n\n    return (\n        <div className={bgColor}>\n            <SpeakerSearchBar\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n            />\n            <React.Fragment>\n                <SpecialMessageRenderProps>\n                    {({specialMessage}) => {\n                        return (\n                            <Request baseUrl=\"http://localhost:4000\" routeName=\"speakers\">\n                                {({records: speakers, status, error, put}) => {\n                                    const onFavoriteToggleHandler = async (speakerRec) => {\n                                        put({\n                                            ...speakerRec,\n                                            isFavorite: !speakerRec.isFavorite,\n                                        });\n                                    };\n                                    const success = status === REQUEST_STATUS.SUCCESS;\n                                    const isLoading = status === REQUEST_STATUS.LOADING;\n                                    const hasErrored = status === REQUEST_STATUS.ERROR;\n                                    return (\n                                        <React.Fragment>\n\n                                            {specialMessage && specialMessage.length > 0 && (\n                                                <div\n                                                    className=\"bg-orange-100 border-l-8 border-orange-500 text-orange-700 p-4 text-2xl\"\n                                                    role=\"alert\"\n                                                >\n                                                    <p className=\"font-bold\">Special Message</p>\n                                                    <p>{specialMessage}</p>\n                                                </div>\n                                            )}\n\n                                            {isLoading && <div>Loading...</div>}\n                                            {hasErrored && (\n                                                <div>\n                                                    Loading error... Is the json-server running? (try \"npm run\n                                                    json-server\" at terminal prompt)\n                                                    <br/>\n                                                    <b>ERROR: {error.message}</b>\n                                                </div>\n                                            )}\n                                            {success && (\n                                                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\n                                                    {speakers\n                                                        .filter((rec) => {\n                                                            const targetString = `${rec.firstName} ${rec.lastName}`.toLowerCase();\n                                                            return searchQuery.length === 0\n                                                                ? true\n                                                                : targetString.includes(searchQuery.toLowerCase());\n                                                        })\n                                                        .map((speaker) => (\n                                                            <Speaker\n                                                                key={speaker.id}\n                                                                {...speaker}\n                                                                onFavoriteToggle={() => onFavoriteToggleHandler(speaker)}\n                                                            />\n                                                        ))}\n                                                </div>\n                                            )}\n                                        </React.Fragment>\n                                    );\n                                }}\n                            </Request>\n                        )\n                    }}\n                </SpecialMessageRenderProps>\n            </React.Fragment>\n        </div>\n    );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}